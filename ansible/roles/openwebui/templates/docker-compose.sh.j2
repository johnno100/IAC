# Path: ansible/roles/openwebui/templates/docker-compose.yml.j2
---
version: '3'

services:
  postgres:
    image: postgres:16-alpine
    container_name: {{ openwebui_postgres_container }}
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - {{ openwebui_postgres_volume }}:/var/lib/postgresql/data
    networks:
      - openwebui-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  openwebui:
    image: ghcr.io/open-webui/open-webui:{{ openwebui_version }}
    container_name: {{ openwebui_container }}
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
{% if openwebui_extra_env %}
{% for key, value in openwebui_extra_env.items() %}
      - {{ key }}=${{{ key }}}
{% endfor %}
{% endif %}
    volumes:
      - {{ openwebui_data_volume }}:/app/backend/data
    networks:
      - openwebui-network
      - {{ openwebui_network }}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openwebui.rule=Host(`{{ openwebui_domain }}`)"
      - "traefik.http.routers.openwebui.entrypoints=websecure"
      - "traefik.http.routers.openwebui.tls.certresolver=letsencrypt"
      - "traefik.http.services.openwebui.loadbalancer.server.port=8080"
{% if openwebui_authentik_integration %}
      - "traefik.http.routers.openwebui.middlewares={{ openwebui_authentik_middleware }}"
{% endif %}