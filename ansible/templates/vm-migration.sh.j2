# ansible/templates/vm-migration.sh.j2
#!/bin/bash
# VM migration script for Proxmox VE
# Generated by Ansible on {{ ansible_date_time.date }}

# Configuration
TARGET_NODE="{{ target_node }}"
SOURCE_NODE="{{ inventory_hostname }}"
LOG_FILE="/var/log/vm-migration-$(date +%Y%m%d-%H%M%S).log"
VM_LIST="{{ vms_to_migrate | join(' ') }}"

# Functions
log() {
    echo "[$(date +%Y-%m-%d\ %H:%M:%S)] $1" | tee -a $LOG_FILE
}

migrate_vm() {
    local VM_ID=$1
    local TARGET=$2
    local ONLINE=${3:-1}
    
    log "Starting migration of VM $VM_ID to $TARGET"
    
    # Get VM status
    local VM_STATUS=$(qm status $VM_ID | awk '{print $2}')
    
    if [ "$VM_STATUS" == "running" ] && [ "$ONLINE" -eq 1 ]; then
        # Online migration
        log "Performing online migration for running VM $VM_ID"
        qm migrate $VM_ID $TARGET --online
    else
        # Offline migration
        if [ "$VM_STATUS" == "running" ]; then
            log "Stopping VM $VM_ID for offline migration"
            qm stop $VM_ID
            sleep 10
        fi
        
        log "Performing offline migration for VM $VM_ID"
        qm migrate $VM_ID $TARGET
    fi
    
    # Check migration result
    if [ $? -eq 0 ]; then
        log "VM $VM_ID successfully migrated to $TARGET"
        return 0
    else
        log "ERROR: Failed to migrate VM $VM_ID to $TARGET"
        return 1
    fi
}

# Main script
log "Starting VM migration from $SOURCE_NODE to $TARGET_NODE"
log "VMs to migrate: $VM_LIST"

# Check if target node is available
if ! pvecm nodelist | grep -q $TARGET_NODE; then
    log "ERROR: Target node $TARGET_NODE is not in the cluster or not available"
    exit 1
fi

# Migrate each VM
for VM_ID in $VM_LIST; do
    migrate_vm $VM_ID $TARGET_NODE
    # Add some delay between migrations
    sleep 5
done

log "Migration process completed"
exit 0